{
	"info": {
		"_postman_id": "1c8b2f57-f6e2-40af-aa64-555d7041ae99",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json();\r",
							"var req_data = request.data;\r",
							"pm.test(\"Your name Zulia?\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(resp_data.name).to.eql(\"Zulia\");});\r",
							"pm.test(\"Your age 25?\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(resp_data.age).to.eql(\"25\");});\r",
							"pm.test(\"Your salary 800?\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(resp_data.salary).to.eql(800);});\r",
							"pm.request.url.query.toObject();\r",
							"pm.test (\"Your request name = response name?\", function () {\r",
							"pm.expect(req_data.name).to.eql(resp_data.name);});\r",
							"pm.test (\"Your request age = response age?\", function () {\r",
							"pm.expect(req_data.age).to.eql(resp_data.age);});\r",
							"pm.test (\"Your request salary = response salary?\", function () {\r",
							"pm.expect(parseInt.salary).to.eql(parseInt.salary);})\r",
							"console.log(resp_data.family);\r",
							"pm.test(\"Does response u_salary_1_5_year = salary*4 request?\", function () {\r",
							"pm.expect(resp_data.family.u_salary_1_5_year).to.eql((req_data.salary)*4);});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Zulia",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "800",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){;\r",
							"pm.response.to.have.status(200);});\r",
							"var resp_data = pm.response.json();\r",
							"pm.req_data = pm.request.url.query.toObject();\r",
							"pm.test (\"Your response name = request name?\", function (){\r",
							"pm.expect(resp_data.name).to.eql(\"Zulia\");});\r",
							"pm.test(\"Does response age = request age?\", function(){\r",
							"pm.expect(resp_data.age).to.eql(\"25\");});\r",
							"pm.test(\"Does response salary = request salary?\", function(){\r",
							"pm.expect(resp_data.salary).to.eql(700);});\r",
							"console.log(resp_data.family);\r",
							"pm.test(\"Does dog have name parameter?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.name).exist;});\r",
							"pm.test(\"Does dog have age parameter?\", function (){\r",
							"pm.expect(resp_data.family.pets.dog.age).exist;});\r",
							"pm.test(\"Does dog have name Luky?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.name).to.eql('Luky');});\r",
							"pm.test(\"Does dog age is 4?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.age).to.eql(4);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Zulia&age=25&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Zulia"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"var resp_data = pm.response.json();\r",
							"pm.req_data = pm.request.url.query.toObject();\r",
							"pm.test (\"Your response name = request name?\", function (){\r",
							"pm.expect(resp_data.name).to.eql(\"Rustem\");\r",
							"});\r",
							"pm.test(\"Does response age = request age?\", function(){\r",
							"pm.expect(resp_data.age).to.eql(44);\r",
							"});\r",
							"var req_data = pm.request.url.query.toObject();\r",
							"pm.test(\"Show request salary in console log\", function () {\r",
							"console.log('Request salary = '+ req_data.salary);\r",
							"});\r",
							"pm.test(\"Show response salary in console log\", function () {\r",
							"console.log('Response salary = '+ resp_data.salary);\r",
							"});\r",
							"pm.test(\"Show response salary[0] in console log\", function () {\r",
							"console.log('Response salary[0] = '+ resp_data.salary[0])\r",
							"});\r",
							"pm.test(\"Show response salary[1] in console log\", function () {\r",
							"console.log('Response salary[1] = '+ resp_data.salary[1])\r",
							"});\r",
							"pm.test(\"Show response salary[2] in console log\", function () {\r",
							"console.log('Response salary[2] = '+resp_data.salary[2])\r",
							"});\r",
							"pm.test(\"Your response salary[0]= request salary\", function () {\r",
							"pm.expect(resp_data.salary[0]).to.eql(+req_data.salary);\r",
							"});\r",
							"pm.test(\"Your response salary[1] = request salary x 2?\", function () {\r",
							"pm.expect(+resp_data.salary[1]).to.eql(req_data.salary * 2);\r",
							"});\r",
							"pm.test(\"Your response salary[2] = request salary x 3?\", function () {\r",
							"pm.expect(+resp_data.salary[2]).to.eql(req_data.salary * 3);\r",
							"});\r",
							"pm.environment.set(\"name\", resp_data.name);\r",
							"pm.environment.set(\"age\", resp_data.age);\r",
							"pm.environment.set(\"salary\", resp_data.salary);\r",
							"for(let sal in resp_data.salary) {\r",
							"console.log(\"salary\"+ sal+ \"=\" + resp_data.salary[sal]);}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Rustem&age=44&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Rustem"
						},
						{
							"key": "age",
							"value": "44"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200); });\r",
							"var resp_data=pm.response.json();\r",
							"var req_data=request.data;\r",
							"pm.test(\"Param = start_qa_salary\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"start_qa_salary\")});\r",
							"pm.test(\"Does qa_salary_after_6_months exist?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_6_months).exist });\r",
							"pm.test(\"Does qa_salary_after_12_months exist?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_12_months).exist });\r",
							"pm.test(\"Does qa_salary_after_1.5_year exist?\", function () {\r",
							"pm.expect(\"resp_data.qa_salary_after_1.5_year\").exist });\r",
							"pm.test(\"Does qa_salary_after_3.5_year exist\", function (){\r",
							"pm.expect(\"resp_data.qa_salary_after0_3.5_year\").exist });\r",
							"pm.test(\"Is param respons = person?\", function () {\r",
							"pm.expect(resp_data).to.have.property(\"person\")});\r",
							"pm.test(\"Does start_qa_salary = resp and req?\", function () {\r",
							"pm.expect(resp_data[\"person\"][\"start_qa_salary\"]).to.eql(req_data.salory)});\r",
							"pm.test(\"Does qa_salary_after_6_months = salary * 2?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_6_months).to.eql(+req_data.salary*2)});\r",
							"pm.test(\"Does qa_salary_after_12_months = salary * 2.7?\", function (){\r",
							"pm.expect(resp_data.qa_salary_after_12_months).to.eql(+req_data.salary*2.7)});\r",
							"pm.test(\"Does qa_salary_after_1.5_year = salary * 3.3?\", function () {\r",
							"pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary*3.3)});\r",
							"pm.test(\"Does qa_salary_after_3.5_year = salary * 3.8?\", function () {\r",
							"pm.expect(resp_data[\"qa_salary_after_3.5_year\"]).to.eql(+req_data.salary*3.8)});\r",
							"pm.test(\"response person.u_name[1]=salary?\", function () {\r",
							"pm.expect(resp_data.person.u_name[1]).to.eql(+req_data.salary);})\r",
							"pm.test(\"response person.u_age=age?\", function () {\r",
							"pm.expect(resp_data.person.u_age).to.eql(+req_data.age)});\r",
							"pm.test(\"u_salary_5_years=salary*4.2?\", function () {\r",
							"pm.expect(resp_data.person.u_salary_5_years).to.eql(req_data.salary*4.2)});\r",
							"for(let key in resp_data.person){\r",
							"console.log(key+\":\" +resp_data.person[key])};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2?name={{name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Zulia",
							"type": "text"
						},
						{
							"key": "password",
							"value": "25f25f25f",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	]
}